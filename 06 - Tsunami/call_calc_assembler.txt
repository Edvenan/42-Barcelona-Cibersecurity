// Definimos la sección de datos (section .data) y declaramos una variable llamada cmdline que 
// contiene el nombre del ejecutable de la calculadora (calc.exe). Agregamos un byte nulo (0) al
// final para indicar el final de la cadena.


section .text
    global _start

_start:

// Definimos la sección de código (section .text) y marcamos el punto de entrada del programa con la etiqueta _start.

    ; Cargar dirección de la cadena cmdline en ECX
    mov ecx, cmdline
Movemos la dirección de la cadena cmdline en el registro ECX. Esto nos permite pasar la dirección de la cadena como argumento a la función WinExec.


    ; Llamar a la función WinExec para ejecutar la calculadora
    push 0
    push ecx
    mov eax, 0x77d8ffbd  ; Dirección de la función WinExec en la biblioteca kernel32.dll
    call eax
Preparamos los argumentos para llamar a la función WinExec. Primero, empujamos un valor cero en la pila como el segundo argumento para indicar que queremos ejecutar el programa en modo predeterminado. Luego, empujamos la dirección de la cadena cmdline en la pila como el primer argumento. Movemos la dirección de la función WinExec en el registro EAX y luego realizamos una llamada a la función WinExec utilizando la instrucción call. Esto ejecutará la calculadora en Windows XP.


    ; Salir del programa
    mov eax, 1
    xor ebx, ebx
    int 0x80

Finalmente, utilizamos instrucciones similares al ejemplo anterior para salir del programa.

Recuerda que este código específico está diseñado para Windows XP y puede no ser compatible con otras versiones de Windows. Además, ten en cuenta que la ejecución de código malicioso sin el consentimiento del usuario puede ser ilegal y dañino.


section .data
    cmdline db 'calc.exe', 0

section .text
    global _start

_start:
    ; Cargar dirección de la cadena cmdline en ECX
    mov ecx, cmdline

    ; Llamar a la función WinExec para ejecutar la calculadora
    push 0
    push ecx
    mov eax, 0x77d8ffbd  ; Dirección de la función WinExec en la biblioteca kernel32.dll
    call eax

    ; Salir del programa
    mov eax, 1
    xor ebx, ebx
    int 0x80
